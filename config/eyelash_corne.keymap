/*
 * If the Keymap Editor still chokes on these lines, remove them entirely
 * and keep them in a separate file used by your ZMK build.
 */
// #define ZMK_POINTING_DEFAULT_MOVE_VAL 600
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 25
// #include <input/processors.dtsi>
// #include <zephyr/dt-bindings/input/input-event-codes.h>
// #include <behaviors.dtsi>
// #include <behaviors/num_word.dtsi>
// #include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/ext_power.h>
// #include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/outputs.h>
// #include <dt-bindings/zmk/pointing.h>
// #include <dt-bindings/zmk/rgb.h>
// #include "zmk-helpers/helper.h"
// #include "eyelash_corne/keymap.h"
// #include "zmk-helpers/unicode-chars/french.dtsi"
// #include "zmk-helpers/unicode-chars/currency.dtsi"

/* 
 * Anything not strictly Devicetree overlay can prevent the Keymap Editor
 * from finding the root node. So keep the lines above commented out if 
 * you want the Editor to parse the file.
 */

 / {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;      /* SYM = 1, NUM = 2 */
            then-layer = <3>;      /* SYSTEM = 3 */
        };
    };

    behaviors {
        /* Example of a custom tap-dance behavior: */
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <100>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <27 28>; /* example: RM1 RM2, etc. Update as needed. */
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <33 39>;
        };

        goequal {
            bindings = <&goequal>;
            key-positions = <42 43>;
        };

        saveandquit {
            bindings = <&savequit>;
            key-positions = <15 16>;
        };
    };

    macros {
        goequal: goequal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
            label = "GOEQUAL";
        };

        savequit: savequit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W &kp Q>;
            label = "SAVEQUIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
                &kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T        &kp UP  &kp Y    &kp U    &kp I       &kp O     &kp P      &kp BSPC
                &td0       &kp A      &kp S      &kp D      &kp F      &kp G        &kp LEFT &kp RET  &kp RIGHT &kp H     &kp J     &kp K      &kp L      &kp SEMI    &kp SQT
                &kp LCTRL  &kp Z      &kp X      &kp C      &kp V      &kp B        &kp DOWN &kp N   &kp M      &kp COMMA &kp DOT    &kp FSLH   &trans
                                        &kp LGUI &mo 1 /*SYM*/ &kp SPACE  &kp ENTER &mo 2 /*NUM*/ &kp RALT
            >;
        };

        sym_layer {
            display-name = "Symbols";
            bindings = <
                &kp ESC     &kp EXCL  &kp AT     &kp POUND &kp DOLLAR &kp PERCENT  &mmv MOVE_UP  &kp CARET &kp AMPERSAND &kp ASTRK &kp SLASH &kp BACKSLASH &kp DEL
                &kp LESS_THAN &kp LEFT_PARENTHESIS &kp LEFT_BRACE &kp LEFT_BRACKET &kp DOT &kp COLON &mmv MOVE_LEFT &mkp LCLK &mmv MOVE_RIGHT &kp UNDER &kp PIPE &kp EQUAL &kp QUOTE &kp GRAVE  &kp PG_UP
                &kp GREATER_THAN &kp RIGHT_PARENTHESIS &kp RIGHT_BRACE &kp RIGHT_BRACKET &kp COMMA &kp SEMI &mmv MOVE_DOWN &kp MINUS &kp PLUS &kp QUESTION &kp DOUBLE_QUOTES &kp TILDE &trans
                                          &trans &trans &trans   &kp INS &kp DEL &trans
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
                &trans &trans &trans &trans &trans &trans &mmv MOVE_UP &trans &trans &trans &trans &trans &kp BSPC
                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &mmv MOVE_LEFT &mkp LCLK &mmv MOVE_RIGHT &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp DEL
                &trans &trans &trans &trans &trans &trans &mmv MOVE_DOWN &trans &trans &trans &trans &trans &trans
                                      &trans &trans &trans  &kp RET &trans &trans
            >;
        };

        system_layer {
            display-name = "System";
            bindings = <
                &studio_unlock &kp F1  &kp F2  &kp F3  &kp F4 &kp F5         &mmv MOVE_UP   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &bt BT_CLR_ALL &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &mmv MOVE_LEFT &mkp LCLK &mmv MOVE_RIGHT &bootloader &mkp LCLK &mkp MCLK &mkp RCLK &kp PRINTSCREEN &kp F12
                &ext_power EP_TOG &sys_reset &trans &bootloader &out OUT_USB &out OUT_BLE &mmv MOVE_DOWN &trans &trans &bootloader &sys_reset &kp SCROLLLOCK &kp PAUSE_BREAK
                                                 &trans &trans &trans  &trans &trans &trans
            >;
        };

        game_layer {
            display-name = "Game";
            bindings = <
                &kp TAB  &kp Q &kp W &kp E &kp R &kp T &kp UP &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &td0     &kp A &kp S &kp D &kp F &kp G &kp LEFT &kp ENTER &kp RIGHT &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp DOWN &kp N &kp M &kp COMMA &kp DOT &kp FSLH &to 0
                                      &kp LGUI &mo 1 &kp SPACE  &kp ENTER &mo 2 &kp RALT
            >;
        };
    };
};
